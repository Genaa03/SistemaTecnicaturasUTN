CREATE PROC [OBTENER_ALUMNOS]
AS
select * from Alumnos
order by 3

CREATE PROC OBTENER_BARRIOS
AS
select id_barrio,barrio from barrios
order by 2

CREATE PROC OBTENER_ESTADOS_CIVIL
AS
    SELECT * FROM estados_civil ORDER BY 2

CREATE PROC OBTENER_SITUACION_HAB
AS
    SELECT * FROM situaciones_hab ORDER BY 2

CREATE PROC OBTENER_SITUACION_LAB
AS
    SELECT * FROM situaciones_lab ORDER BY 2

CREATE PROC OBTENER_TECNICATURAS
AS
    SELECT * FROM tecnicaturas
    WHERE id_tecnicatura != 6
    ORDER BY 2


CREATE PROC OBTENER_TIPOS_DNI
AS
    SELECT * FROM tipos_dni ORDER BY 2

CREATE PROCEDURE PROXIMO_ALUMNO
@next int OUTPUT
AS
BEGIN
	SET @next = (SELECT MAX(id_alumno)+1  FROM Alumnos);
END

CREATE PROC LISTA_ALUMNOS
AS
    SELECT apellido,nombre FROM Alumnos
    where Alta = 'true'
    order by 1

CREATE PROC LISTA_ALUMNOS_BAJA
AS
    SELECT apellido,nombre FROM Alumnos
    where Alta = 'false'
    order by 1

CREATE PROC SP_ALTA_ALUMNO
@apellido varchar(30),
@nombre varchar(30)
as
    update Alumnos
    set Alta = 1
    where apellido = @apellido and nombre = @nombre

CREATE PROC SP_BAJA_ALUMNO
@apellido varchar(30),
@nombre varchar(30)
as
    update Alumnos
    set Alta = 0
    where apellido = @apellido and nombre = @nombre

CREATE PROCEDURE CREAR_EXAMEN
	@tipo_examen int,
	@materia int,
	@fecha datetime,
	@id int output
AS
	INSERT INTO examenes (id_tipo_examen, id_materia, fecha)
    VALUES (@tipo_examen, @materia, @fecha);

    SET @id = SCOPE_IDENTITY();

CREATE PROCEDURE CREAR_DETALLE_EXAMEN
	@id_examen int,
	@id_alumno int,
	@nota int

AS
	INSERT INTO detalle_examenes(id_examen, id_alumno, nota)
    VALUES (@id_examen, @id_alumno, @nota);

CREATE PROC CREAR_ALUMNO

@nombre varchar(30),
@apellido varchar(30),
@tipo_dni int,
@nro_dni varchar(10),
@tecnicatura int,
@fec_nac datetime,
@estado_civil int,
@situacion_lab int,
@situacion_hab int,
@barrio int,
@direccion varchar(100)

as

    INSERT INTO Alumnos(nombre, apellido, id_tipo_dni, nro_dni, id_tecnicatura, fec_nac, id_estado_civil, id_situacion_laboral, id_situacion_habitacional, id_barrio, direccion, Alta)
    VALUES (@nombre,@apellido,@tipo_dni,@nro_dni,@tecnicatura,@fec_nac,@estado_civil,@situacion_lab,@situacion_hab,@barrio,@direccion,1)

CREATE PROC MODIFICAR_ALUMNO

@id int,
@nombre varchar(30),
@apellido varchar(30),
@tipo_dni int,
@nro_dni varchar(10),
@tecnicatura int,
@fec_nac datetime,
@estado_civil int,
@situacion_lab int,
@situacion_hab int,
@barrio int,
@direccion varchar(100)

as

    UPDATE Alumnos
    SET nombre = @nombre,apellido = @apellido,id_tipo_dni = @tipo_dni,nro_dni = @nro_dni ,id_tecnicatura = @tecnicatura,
        fec_nac = @fec_nac,id_estado_civil = @estado_civil,id_situacion_laboral = @situacion_lab,
        id_situacion_habitacional = @situacion_hab,id_barrio = @barrio,direccion = @direccion, Alta = 1
    WHERE id_alumno = @id

CREATE PROC ELIMINAR_ALUMNO

@id int,
@nombre varchar(30),
@apellido varchar(30)


as

    DELETE FROM Alumnos
    WHERE id_alumno = @id AND nombre = @nombre AND apellido = @apellido

CREATE PROC ELIMINAR_ALUMNO

@id int,
@nombre varchar(30),
@apellido varchar(30)


as

    DELETE FROM Alumnos
    WHERE id_alumno = @id AND nombre = @nombre AND apellido = @apellido

CREATE PROC OBTENER_MATERIAS
AS
    SELECT * FROM materias
    ORDER BY 2

CREATE PROC OBTENER_TIPOS_EXAMEN
AS
    SELECT * FROM tipos_examenes
    WHERE id_tipo_examen != 4
    ORDER BY 2

CREATE PROCEDURE PROXIMO_EXAMEN
@next int OUTPUT
AS
BEGIN
	SET @next = (SELECT MAX(id_examen)+1  FROM examenes);

CREATE PROC CREAR_PROFESOR

@nombre varchar(30),
@apellido varchar(30),
@tipo_dni int,
@nro_dni varchar(10),
@fec_nac datetime,
@estado_civil int,
@barrio int,
@direccion varchar(100),
@titulo varchar (100)
as
    INSERT INTO profesores(nombre, apellido, id_tipo_dni, nro_dni, fec_nac, id_estado_civil, id_barrio, direccion, titulo_univ)
    VALUES(@nombre,@apellido,@tipo_dni,@nro_dni,@fec_nac,@estado_civil,@barrio,@direccion,@titulo)


CREATE PROC MODIFICAR_PROFESOR

@id int,
@nombre varchar(30),
@apellido varchar(30),
@tipo_dni int,
@nro_dni varchar(10),
@fec_nac datetime,
@estado_civil int,
@barrio int,
@direccion varchar(100),
@titulo varchar(100)

as

    UPDATE profesores
    SET nombre = @nombre,apellido = @apellido,id_tipo_dni = @tipo_dni,nro_dni = @nro_dni,
        fec_nac = @fec_nac,id_estado_civil = @estado_civil,
        id_barrio = @barrio,direccion = @direccion, titulo_univ = @titulo
    WHERE id_profesor = @id

CREATE PROC ELIMINAR_PROFESOR

@id int,
@nombre varchar(30),
@apellido varchar(30)


as

    DELETE FROM profesores
    WHERE id_profesor = @id AND nombre = @nombre AND apellido = @apellido

CREATE PROCEDURE PROXIMO_PROFESOR
@next int OUTPUT
AS
	SET @next = (SELECT MAX(id_profesor)+1  FROM profesores);

END

CREATE PROC OBTENER_PROFESORES
AS
select id_profesor, apellido +', '+nombre 'nombreCompleto', nombre, apellido, id_tipo_dni, nro_dni, fec_nac,
       id_estado_civil,id_barrio, direccion, titulo_univ from profesores
order by 2


create procedure INGRESO
    as
    select * from login
